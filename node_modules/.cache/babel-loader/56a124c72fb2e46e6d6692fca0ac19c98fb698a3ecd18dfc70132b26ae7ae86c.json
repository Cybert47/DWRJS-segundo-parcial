{"ast":null,"code":"import{createContext,useContext,useState,useEffect}from\"react\";import{FetchMealByFirstLetter,SearchMealByName,FetchMealById}from\"./mealtService\";import{jsx as _jsx}from\"react/jsx-runtime\";const MealContext=/*#__PURE__*/createContext();export const MealProvider=_ref=>{let{children}=_ref;const[meal,setMeal]=useState([]);const[mealDetails,setMealDetails]=useState(null);const searchMeal=async name=>{const results=await SearchMealByName(name);if(results){setMeal(results);}else{setMeal([]);}};const loadMeal=async()=>{const results=await FetchMealByFirstLetter();if(results){setMeal(results);}};const fetchMealDetails=async id=>{const meal=await FetchMealById(id);if(meal){setMealDetails(meal);}else{setMealDetails(null);}};useEffect(()=>{loadMeal();},[]);return/*#__PURE__*/_jsx(MealContext.Provider,{value:{meal,searchMeal,loadMeal,mealDetails,fetchMealDetails},children:children});};export const useMealContext=()=>{return useContext(MealContext);};","map":{"version":3,"names":["createContext","useContext","useState","useEffect","FetchMealByFirstLetter","SearchMealByName","FetchMealById","jsx","_jsx","MealContext","MealProvider","_ref","children","meal","setMeal","mealDetails","setMealDetails","searchMeal","name","results","loadMeal","fetchMealDetails","id","Provider","value","useMealContext"],"sources":["/home/user/DWRJS-segundo-parcial/src/services/Context.js"],"sourcesContent":["import { createContext, useContext, useState, useEffect } from \"react\"; \nimport { FetchMealByFirstLetter, SearchMealByName, FetchMealById } from \"./mealtService\";\n\nconst MealContext = createContext(); \n\nexport const MealProvider = ({ children }) => { \n    const [meal, setMeal] = useState([]); \n    const [mealDetails, setMealDetails] = useState(null);\n\n    const searchMeal = async (name) => { \n        const results = await SearchMealByName(name);\n        if (results) {\n            setMeal(results);\n        } else {\n            setMeal([]);\n        }\n    };\n\n    const loadMeal = async () => {\n        const results = await FetchMealByFirstLetter(); \n        if (results) {\n            setMeal(results);\n        }\n    };\n\n    const fetchMealDetails = async (id) => {\n        const meal = await FetchMealById(id); \n        if (meal) {\n            setMealDetails(meal);\n        } else {\n            setMealDetails(null);\n        }\n    };\n\n    useEffect(() => { \n        loadMeal();\n    }, []);\n\n    return (\n        <MealContext.Provider \n            value={{ \n                meal, \n                searchMeal, \n                loadMeal, \n                mealDetails, \n                fetchMealDetails \n            }}\n        > \n            {children}\n        </MealContext.Provider>\n    );\n}\n\nexport const useMealContext = () => {\n    return useContext(MealContext); \n};\n"],"mappings":"AAAA,OAASA,aAAa,CAAEC,UAAU,CAAEC,QAAQ,CAAEC,SAAS,KAAQ,OAAO,CACtE,OAASC,sBAAsB,CAAEC,gBAAgB,CAAEC,aAAa,KAAQ,gBAAgB,CAAC,OAAAC,GAAA,IAAAC,IAAA,yBAEzF,KAAM,CAAAC,WAAW,cAAGT,aAAa,CAAC,CAAC,CAEnC,MAAO,MAAM,CAAAU,YAAY,CAAGC,IAAA,EAAkB,IAAjB,CAAEC,QAAS,CAAC,CAAAD,IAAA,CACrC,KAAM,CAACE,IAAI,CAAEC,OAAO,CAAC,CAAGZ,QAAQ,CAAC,EAAE,CAAC,CACpC,KAAM,CAACa,WAAW,CAAEC,cAAc,CAAC,CAAGd,QAAQ,CAAC,IAAI,CAAC,CAEpD,KAAM,CAAAe,UAAU,CAAG,KAAO,CAAAC,IAAI,EAAK,CAC/B,KAAM,CAAAC,OAAO,CAAG,KAAM,CAAAd,gBAAgB,CAACa,IAAI,CAAC,CAC5C,GAAIC,OAAO,CAAE,CACTL,OAAO,CAACK,OAAO,CAAC,CACpB,CAAC,IAAM,CACHL,OAAO,CAAC,EAAE,CAAC,CACf,CACJ,CAAC,CAED,KAAM,CAAAM,QAAQ,CAAG,KAAAA,CAAA,GAAY,CACzB,KAAM,CAAAD,OAAO,CAAG,KAAM,CAAAf,sBAAsB,CAAC,CAAC,CAC9C,GAAIe,OAAO,CAAE,CACTL,OAAO,CAACK,OAAO,CAAC,CACpB,CACJ,CAAC,CAED,KAAM,CAAAE,gBAAgB,CAAG,KAAO,CAAAC,EAAE,EAAK,CACnC,KAAM,CAAAT,IAAI,CAAG,KAAM,CAAAP,aAAa,CAACgB,EAAE,CAAC,CACpC,GAAIT,IAAI,CAAE,CACNG,cAAc,CAACH,IAAI,CAAC,CACxB,CAAC,IAAM,CACHG,cAAc,CAAC,IAAI,CAAC,CACxB,CACJ,CAAC,CAEDb,SAAS,CAAC,IAAM,CACZiB,QAAQ,CAAC,CAAC,CACd,CAAC,CAAE,EAAE,CAAC,CAEN,mBACIZ,IAAA,CAACC,WAAW,CAACc,QAAQ,EACjBC,KAAK,CAAE,CACHX,IAAI,CACJI,UAAU,CACVG,QAAQ,CACRL,WAAW,CACXM,gBACJ,CAAE,CAAAT,QAAA,CAEDA,QAAQ,CACS,CAAC,CAE/B,CAAC,CAED,MAAO,MAAM,CAAAa,cAAc,CAAGA,CAAA,GAAM,CAChC,MAAO,CAAAxB,UAAU,CAACQ,WAAW,CAAC,CAClC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}